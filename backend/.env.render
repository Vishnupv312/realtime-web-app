# =======================================
# RENDER DEPLOYMENT ENVIRONMENT VARIABLES
# =======================================
# Copy these variables to your Render dashboard under "Environment Variables"
# DO NOT commit this file with real secrets to version control

# =======================================
# SERVER CONFIGURATION
# =======================================
# Render automatically assigns PORT - use this value
PORT=10000
NODE_ENV=production

# CORS Origins (comma-separated for multiple origins)
# Replace with your actual frontend domain(s)
CORS_ORIGIN=https://realtime-web-app-ecru.vercel.app,https://your-custom-domain.com

# Trust proxy for proper IP detection behind Render's load balancer
TRUST_PROXY=1

# =======================================
# DATABASE CONFIGURATION
# =======================================
# MongoDB Atlas connection string (REQUIRED)
# Format: mongodb+srv://username:password@cluster.mongodb.net/database_name?retryWrites=true&w=majority
MONGODB_URI=mongodb+srv://vishnu:TestPasswordCluster@realtimechatapp.f2sf2ye.mongodb.net/realtime_chat?retryWrites=true&w=majority

# Optional: Separate read-only connection for analytics
# MONGODB_READ_URI=mongodb+srv://readonly_user:password@cluster.mongodb.net/realtime_chat

# =======================================
# JWT & AUTHENTICATION
# =======================================
# Generate secure secret: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
# MUST be at least 32 characters long
JWT_SECRET=a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456789012345678901234567890abcdef123456
JWT_EXPIRES_IN=7d

# Password hashing rounds (higher = more secure but slower)
BCRYPT_ROUNDS=12

# =======================================
# REDIS CONFIGURATION (SCALING)
# =======================================
# Redis Cloud: https://redis.com/redis-enterprise-cloud/
# Upstash: https://upstash.com/
# Format: redis://username:password@hostname:port
REDIS_URL=redis://default:password@redis-hostname:6379

# Individual Redis components (for legacy support)
REDIS_HOST=redis-hostname
REDIS_PORT=6379
REDIS_PASSWORD=your-redis-password

# Redis connection pool settings
REDIS_MAX_RETRIES=3
REDIS_RETRY_DELAY_ON_FAILURE=100

# =======================================
# FILE UPLOAD & STORAGE
# =======================================
# Maximum file size in bytes (10MB default)
MAX_FILE_SIZE=10485760

# Maximum voice message duration in seconds (5 minutes)
MAX_VOICE_DURATION=300

# Upload directory (Render has ephemeral filesystem - consider cloud storage)
UPLOAD_PATH=./uploads

# Optional: Cloud storage configuration
# AWS_ACCESS_KEY_ID=your-aws-access-key
# AWS_SECRET_ACCESS_KEY=your-aws-secret-key
# AWS_REGION=us-east-1
# AWS_S3_BUCKET=your-bucket-name

# =======================================
# SECURITY & RATE LIMITING
# =======================================
# Rate limiting configuration
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100
AUTH_RATE_LIMIT_MAX=5
API_RATE_LIMIT_MAX=1000
UPLOAD_RATE_LIMIT_MAX=10

# Session configuration
SESSION_SECRET=another-super-secure-random-string-for-sessions-change-this

# =======================================
# LOGGING & MONITORING
# =======================================
# Log level: error, warn, info, http, verbose, debug, silly
LOG_LEVEL=info

# Log file path (Render has ephemeral filesystem)
LOG_FILE=./logs/app.log

# Enable request logging
ENABLE_REQUEST_LOGGING=true

# =======================================
# WEBSOCKET & WEBRTC
# =======================================
# WebSocket ping timeout (milliseconds)
SOCKET_PING_TIMEOUT=60000
SOCKET_PING_INTERVAL=25000

# Maximum connections per client IP
MAX_CONNECTIONS_PER_IP=10

# STUN/TURN servers for WebRTC (optional)
# STUN_SERVER=stun:stun.l.google.com:19302
# TURN_SERVER=turn:your-turn-server.com:3478
# TURN_USERNAME=username
# TURN_CREDENTIAL=password

# =======================================
# PERFORMANCE & CLUSTERING
# =======================================
# Render handles scaling automatically - keep these disabled
CLUSTER_MODE=false
CLUSTER_WORKERS=0

# Connection pool settings
DB_MAX_POOL_SIZE=10
DB_MIN_POOL_SIZE=2

# Memory management
NODE_OPTIONS=--max-old-space-size=512

# =======================================
# DEPLOYMENT INFORMATION
# =======================================
# These are for reference - update with your actual URLs
# FRONTEND_URL=https://realtime-web-app-ecru.vercel.app
# BACKEND_URL=https://realtime-web-app.onrender.com
# WEBSOCKET_URL=wss://realtime-web-app.onrender.com

# =======================================
# RENDER DEPLOYMENT CHECKLIST
# =======================================
# ✅ Set all environment variables in Render dashboard
# ✅ MongoDB Atlas database configured with IP whitelist (0.0.0.0/0 for Render)
# ✅ Redis Cloud or Upstash instance created
# ✅ Strong JWT_SECRET generated (64+ characters)
# ✅ CORS_ORIGIN set to your frontend domain
# ✅ Frontend updated with correct backend URL
# ✅ Health check endpoint configured (/health)
# ✅ Build command: npm install
# ✅ Start command: npm start
# ✅ Node.js version: 16+ (set in package.json engines)
# 
# IMPORTANT SECURITY NOTES:
# - Never commit real secrets to version control
# - Use Render's environment variable dashboard
# - Regularly rotate JWT_SECRET and database passwords
# - Monitor logs for security issues
# - Enable MongoDB Atlas IP whitelist and authentication
